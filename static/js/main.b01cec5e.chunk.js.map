{"version":3,"sources":["components/contactsList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","components/section/Section.js","redux/phonebook/phonebook-selectors.js","services/contacts-api.js","components/contactForm/ContactForm.js","redux/phonebook/phonebook-operations.js","components/contactsList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","filterContacts","items","createReducer","_","payload","state","filter","id","loading","error","action","combineReducers","store","configureStore","reducer","contacts","contactsReducer","Section","title","children","getItems","getFilter","getFilteredContacts","createSelector","normalizedContacts","toLowerCase","contact","name","includes","isLoading","fetchContacts","a","axios","get","data","addContact","number","post","deleteContact","delete","defaults","baseURL","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","onSubmit","contactsActions","contactsAPI","newContact","addContacts","handleInputChange","event","currentTarget","value","reset","className","s","form","preventDefault","find","alert","type","onChange","pattern","required","ContactList","useEffect","handleDeleteContacts","deleteContacts","map","btn","onClick","Filter","input","e","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b01cec5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1KGWS\",\"filter\":\"ContactList_filter__39y_U\",\"btn\":\"ContactList_btn__1F4IF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Dyg6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2bst2\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction('contacts/deleteContactsRequest');\nexport const deleteContactsSuccess = createAction('contacts/deleteContactsSuccess');\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const filterContacts = createAction('contacts/filterContacts');\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  filterContacts,\n} from './phonebook-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, action) => action.payload,\n  [fetchContactsRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport { store };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <section>\n        {title && <h1>{title}</h1>}\n        {children}\n      </section>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector([getItems, getFilter], (contacts, filter) => {\n  const normalizedContacts = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContacts),\n  );\n  return filteredContacts;\n});\n\nexport const isLoading = state => state.contacts.loading;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:3000';\n\nexport async function fetchContacts() {\n  const { data } = await axios.get(`/contacts`);\n  return data;\n}\n\nexport async function addContact(name, number) {\n  const { data } = await axios.post(`/contacts`, {\n    name,\n    number,\n  });\n\n  return data;\n}\n\nexport async function deleteContact(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n\n  return data;\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getItems } from '../../redux/phonebook/phonebook-selectors';\nimport s from './ContactForm.module.css';\nimport { addContacts } from '../../redux/phonebook/phonebook-operations';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getItems);\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(addContacts(name, number));\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const revisionContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (revisionContact) {\n      alert(`${name} is already in contacts`);\n      reset();\n      return;\n    }\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button type=\"submit\">Add contacts</button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import * as contactsAPI from '../../services/contacts-api';\nimport * as contactsActions from './phonebook-actions';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  try {\n    const contacts = await contactsAPI.fetchContacts();\n    dispatch(contactsActions.fetchContactsSuccess(contacts));\n  } catch (error) {\n    dispatch(contactsActions.fetchContactsError(error));\n  }\n};\n\nexport const addContacts = (name, number) => async dispatch => {\n  dispatch(contactsActions.addContactsRequest());\n  try {\n    const newContact = await contactsAPI.addContact(name, number);\n    dispatch(contactsActions.addContactsSuccess(newContact));\n  } catch (error) {\n    dispatch(contactsActions.addContactsError(error));\n  }\n};\n\nexport const deleteContacts = id => async dispatch => {\n  dispatch(contactsActions.deleteContactsRequest());\n  try {\n    await contactsAPI.deleteContact(id);\n    dispatch(contactsActions.deleteContactsSuccess(id));\n  } catch (error) {\n    dispatch(contactsActions.deleteContactsError(error));\n  }\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts, isLoading } from '../../redux/phonebook/phonebook-selectors';\n// import { deleteContact } from '../../redux/phonebook/phonebook-actions';\nimport { deleteContacts, fetchContacts } from '../../redux/phonebook/phonebook-operations';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const loading = useSelector(isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDeleteContacts = id => dispatch(deleteContacts(id));\n  return (\n    <>\n      <h2>Contacts</h2>\n      {loading && <div>Загружаю...</div>}\n      <ul className={s.contacts}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <span>{name}:</span> <span>{number}</span>\n            <button className={s.btn} type=\"button\" onClick={() => handleDeleteContacts(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../../redux/phonebook/phonebook-selectors';\nimport { filterContacts } from '../../redux/phonebook/phonebook-actions';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => dispatch(filterContacts(e.currentTarget.value));\n  return (\n    <label>\n      Filter contacts by name{' '}\n      <input className={s.input} type=\"text\" value={value} onChange={handleChangeFilter} />\n    </label>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport Section from './components/section/Section';\nimport ContactForm from './components/contactForm/ContactForm';\nimport ContactList from './components/contactsList/ContactList';\nimport Filter from './components/filter/Filter';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}